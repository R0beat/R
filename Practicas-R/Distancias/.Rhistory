for (j in 1:100) {
z[i,j] <- dmvnorm(c(x.points[i],y.points[j]),
mean=mu,sigma=sigma)
}
}
contour(x.points,y.points,z)
bivn <- mvrnorm(5000, mu =  c(0,0), Sigma = matrix(c(1, 0, 0, 1), 2) )  # utiliza Mass package
bivn.kde <- kde2d(bivn[,1], bivn[,2], n = 50)
filled.contour(x = bivn.kde$x, y = bivn.kde$y , z = bivn.kde$z,plot.axes = { axis(1); axis(2); points(0, 0) })
image(bivn.kde)       # from base graphics package
contour(bivn.kde, add = TRUE)
mu =  c(0,0)
Sigma = matrix(c(1, 0, 0, 1), 2)
bivn4 <- mvrnorm(5000, mu , Sigma )
rho <- cor(bivn4)
plot(bivn4, xlab = "X", ylab = "Y",
col = "cyan",
main = "Bivariate Normal with ellipses")
lines(ellipse(rho, level = .90), col="blue")
lines(ellipse(rho, level = .95), col="red")
lines(ellipse(rho, level = .99), col="green")
plot_legend <- c("99% CI green", "95% CI red","90% CI blue")
legend(-4,-2,legend=plot_legend,cex = 1, bty = "n")
library(ggplot2)
install.packages("mixtools")
library(mixtools)
library(mvtnorm)
library(mvtnorm)
bivn <- rmvt(1000, sigma = diag(2), df = 3)
plot(bivn)
clcenter <- colMeans(bivn)
clcov <- cov(bivn)
clcenter
clcov <- cov(bivn)
clcov
set.seed(3002)
bivn <- rmvt(1000, sigma = diag(2), df = 3)
plot(bivn)
diag(2)
clcenter <- colMeans(bivn)
View(clcov)
clcov <- cov(bivn)
clcov <- cov(bivn)
clcov <- cov(bivn)
clcenter
clcov
bivn <- rmvt(1000, sigma = diag(2), df = 3)
plot(bivn)
clcenter <- colMeans(bivn)
clcov <- cov(bivn)
clcov
bivn <- rmvt(1000, sigma = diag(2), df = 3)
plot(bivn)
bivn <- rmvt(1000, sigma = diag(2), df = 3)
plot(bivn)
bivn <- rmvt(1000, sigma = diag(2), df = 3)
plot(bivn)
bivn <- rmvt(1000, sigma = diag(2), df = 3)
plot(bivn)
clcenter <- colMeans(bivn)
clcenter <- colMeans(bivn)
plot(bivn)
bivn <- rmvt(1000, sigma = diag(2), df = 3)
plot(bivn)
clcenter <- colMeans(bivn)
clcenter
clcov <- cov(bivn)
clcov
library(mixtools)
library(mvtnorm)
bivn <- rmvt(1000, sigma = diag(2), df = 3)
plot(bivn)
clcenter <- colMeans(bivn)
#t student se encuentra en 0
clcov <- cov(bivn)
clcenter
clcov
cor(bvin)
cor(bivn)
library(mixtools)
library(mvtnorm)
bivn <- rmvt(1000, sigma = diag(2), df = 3)
plot(bivn)
clcenter <- colMeans(bivn)
clcenter
clcenter
library(mixtools)
library(mvtnorm)
bivn <- rmvt(1000, sigma = diag(2), df = 3)
plot(bivn)
clcenter <- colMeans(bivn)
clcenter
clcenter <- colMeans(bivn)
#t student se encuentra en 0
clcov <- cov(bivn)
clcov
cor(bivn)
set.seed(3002)
bivn <- rmvt(1000, sigma = diag(2), df = 3)
plot(bivn)
clcenter <- colMeans(bivn)
clcov <- cov(bivn)
cor(bivn)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.025,col = "blue", lty = 2)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.25,col = "green", lty = 3)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.5,col = "red", lty = 3)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.025,col = "#FF00FF", lty = 2)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.25,col = "#00FF00", lty = 3)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.5,col = "#00FFFF", lty = 3)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.025,col = "#FF00FF", lty = 2)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.25,col = "#FF1493", lty = 3)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.5,col = "#FF4500", lty = 3)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.025,col = "#FF00FF", lty = 2)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.5,col = "#FF1493", lty = 3)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.8,col = "#FF4500", lty = 3)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.025,col = "#FF00FF", lty = 2)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.5,col = "#FF1493", lty = 3)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.8,col = "#FF4500", lty = 3)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.025,col = "#FF00FF", lty = 2)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.25,col = "#FF1493", lty = 3)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.5,col = "#FF4500", lty = 3)
cor(bivn)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.025,col = "#FF00FF", lty = 2)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.25,col = "#FF1493", lty = 3)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.5,col = "#FF4500", lty = 3)
set.seed(3002)
bivn <- rmvt(1000, sigma = diag(2), df = 3)
plot(bivn)
# Media y matriz de cov calcular matriz de covarianza
clcenter <- colMeans(bivn)
#t student se encuentra en 0
clcov <- cov(bivn)
cor(bvin)
# 97.5%, 75%, 50% elipses de tolerancia
ellipse(mu = clcenter, sigma = clcov, alpha = 0.025,col = "blue", lty = 2)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.25,col = "green", lty = 3)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.5,col = "red", lty = 3)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.025,col = "#FF1493", lty = 2)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.25,col = "#00FF00 ", lty = 3)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.5,col = "#0000CD ", lty = 3)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.025,col = "#FF1493", lty = 2)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.25,col = "#00FF00 ", lty = 3)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.5,col = "#0000CD ", lty = 3)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.025,col = "#FF1493", lty = 2)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.25,col = "#00FF00 ", lty = 3)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.5,col = "#0000CD", lty = 3)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.025,col = "#FF1493", lty = 2)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.25,col = "#800000", lty = 3)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.5,col = "#00FF00", lty = 3)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.025,col = "#FF1493", lty = 2)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.25,col = "#800000", lty = 3)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.5,col = "#4B0082", lty = 3)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.025,col = "#FF1493", lty = 2)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.25,col = "#800000", lty = 3)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.5,col = "#FF00FF", lty = 3)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.025,col = "#FF1493", lty = 2)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.25,col = "#800000", lty = 3)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.5,col = "#FFD700", lty = 3)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.025,col = "#FF1493", lty = 2)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.25,col = "#800000", lty = 3)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.5,col = "#FF0000", lty = 3)
set.seed(3002)
bivn <- rmvt(1000, sigma = diag(2), df = 3,col="green")
plot(bivn)
# Media y matriz de cov calcular matriz de covarianza
clcenter <- colMeans(bivn)
#t student se encuentra en 0
clcov <- cov(bivn)
cor(bvin)
# 97.5%, 75%, 50% elipses de tolerancia
ellipse(mu = clcenter, sigma = clcov, alpha = 0.025,col = "#FF1493", lty = 2)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.25,col = "#800000", lty = 3)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.5,col = "#FF0000", lty = 3)
install.packages(tidyverse)
install.packages(tidyverse
)
install.packages(tidyverse)
install.packages("tidyverse")
library(mixtools)
library(mvtnorm)
#Generando datos bidimensionales t-student con 3 grados de libertad
## x ~ t_3(0, diag(2))
set.seed(3002)
bivn <- rmvt(1000, sigma = diag(2), df = 3,col="green")
plot(bivn)
# Media y matriz de cov calcular matriz de covarianza
clcenter <- colMeans(bivn)
#t student se encuentra en 0
clcov <- cov(bivn)
cor(bvin)
# 97.5%, 75%, 50% elipses de tolerancia
ellipse(mu = clcenter, sigma = clcov, alpha = 0.025,col = "#FF1493", lty = 2)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.25,col = "#800000", lty = 3)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.5,col = "#FF0000", lty = 3)
cor(bivn)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.025,col = "#FF1493", lty = 2)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.25,col = "#800000", lty = 3)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.5,col = "#FF0000", lty = 3)
library(MASS)
bivn.kde <- kde2d(bivn[,1], bivn[,2], n = 50)
library(rgl)
col1 <- heat.colors(length(bivn.kde$z))[rank(bivn.kde$z)]
persp3d(bivn.kde, col = col1)
#Contornos
bivn.kde <- kde2d(bivn[,1], bivn[,2], n = 150)
filled.contour(x = bivn.kde$x, y = bivn.kde$y , z = bivn.kde$z,plot.axes = { axis(1); axis(2); points(0, 0) })
image(bivn.kde)       # from base graphics package
contour(bivn.kde, add = TRUE)
library(tidyverse)
library(ggplot2)
a <- data.frame( a1=bivn[,1], a2=bivn[,2] )
ggplot(a, aes(x=a1, y=a2) ) +
geom_density_2d()
# Solo area
ggplot(a, aes(x=a1, y=a2) ) +
stat_density_2d(aes(fill = ..level..), geom = "polygon")
# Area + contorno
ggplot(a, aes(x=a1, y=a2) ) +
stat_density_2d(aes(fill = ..level..), geom = "polygon", colour="white")
ggplot(a, aes(x=a1, y=a2) ) +
geom_density_2d()
ggplot(a, aes(x=a1, y=a2) ) +
geom_density_2d()
ggplot(a, aes(x=a1, y=a2) ) +
stat_density_2d(aes(fill = ..level..), geom = "polygon")
ggplot(a, aes(x=a1, y=a2) ) +
stat_density_2d(aes(fill = ..level..), geom = "polygon", colour="white")
library(mixtools)
library(mvtnorm)
set.seed(3002)
bivn <- rmvt(1000, sigma = diag(2), df = 3,col="green")
set.seed(3002)
bivn <- rmvt(1000, sigma = diag(2), df = 3,col="green")
library(mixtools)
library(mvtnorm)
set.seed(3002)
bivn <- rmvt(1000, sigma = diag(2), df = 3,col="green"
clcenter <- colMeans(bivn)
#t student se encuentra en 0
clcov <- cov(bivn)
cor(bivn)
library(tidyverse)
library(ggplot2)
a <- data.frame( a1=bivn[,1], a2=bivn[,2] )
# Caso 1
# Grafico de contornos
# Solo contorno
ggplot(a, aes(x=a1, y=a2) ) +
geom_density_2d()
# Solo area
ggplot(a, aes(x=a1, y=a2) ) +
stat_density_2d(aes(fill = ..level..), geom = "polygon")
# Area + contorno
ggplot(a, aes(x=a1, y=a2) ) +
stat_density_2d(aes(fill = ..level..), geom = "polygon", colour="white")
############################################################################################################
#Generando datos bidimensionales t-student con 10 grados de libertad
## x ~ t_10(0, diag(2))
bivn2 <- rmvt(1000, sigma = diag(2), df = 10)
plot(bivn2)
# Media y matriz de cov
clcenter <- colMeans(bivn2)
clcov <- cov(bivn2)
# 97.5%, 75%, 50% elipses de tolerancia
ellipse(mu = clcenter, sigma = clcov, alpha = 0.025,col = "blue", lty = 2)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.25,col = "green", lty = 3)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.5,col = "red", lty = 3)
ggplot(a, aes(x=a1, y=a2) ) +
geom_density_2d()
# Solo area
ggplot(a, aes(x=a1, y=a2) ) +
stat_density_2d(aes(fill = ..level..), geom = "polygon")
# Area + contorno
ggplot(a, aes(x=a1, y=a2) ) +
stat_density_2d(aes(fill = ..level..), geom = "polygon", colour="white")
bivn2 <- rmvt(1000, sigma = diag(2), df = 10)
plot(bivn2)
# Media y matriz de cov
clcenter <- colMeans(bivn2)
clcov <- cov(bivn2)
# 97.5%, 75%, 50% elipses de tolerancia
ellipse(mu = clcenter, sigma = clcov, alpha = 0.025,col = "blue", lty = 2)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.25,col = "green", lty = 3)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.5,col = "red", lty = 3)
set.seed(3002)
bivn <- rmvt(1000, sigma = diag(2), df = 3,col="green")
plot(bivn)
# Media y matriz de cov calcular matriz de covarianza
clcenter <- colMeans(bivn)
#t student se encuentra en 0
clcov <- cov(bivn)
cor(bivn)
# 97.5%, 75%, 50% elipses de tolerancia
ellipse(mu = clcenter, sigma = clcov, alpha = 0.025,col = "#FF1493", lty = 2)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.25,col = "#800000", lty = 3)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.5,col = "#FF0000", lty = 3)
set.seed(3002)
bivn <- rmvt(1000, sigma = diag(2), df = 3,col="green")
plot(bivn)
# Media y matriz de cov calcular matriz de covarianza
clcenter <- colMeans(bivn)
#t student se encuentra en 0
clcov <- cov(bivn)
cor(bivn)
# 97.5%, 75%, 50% elipses de tolerancia
ellipse(mu = clcenter, sigma = clcov, alpha = 0.025,col = "#FF1493", lty = 2)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.25,col = "#800000", lty = 3)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.5,col = "#FF0000", lty = 3)
bivn2 <- rmvt(1000, sigma = diag(2), df = 10)
plot(bivn2)
# Media y matriz de cov
clcenter <- colMeans(bivn2)
clcov <- cov(bivn2)
# 97.5%, 75%, 50% elipses de tolerancia
ellipse(mu = clcenter, sigma = clcov, alpha = 0.025,col = "blue", lty = 2)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.25,col = "green", lty = 3)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.5,col = "red", lty = 3)
set.seed(3002)
bivn <- rmvt(1000, sigma = diag(2), df = 3,col="green")
clcenter <- colMeans(bivn)
#t student se encuentra en 0
clcov <- cov(bivn)
cor(bivn)
# 97.5%, 75%, 50% elipses de tolerancia
ellipse(mu = clcenter, sigma = clcov, alpha = 0.025,col = "#FF1493", lty = 2)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.25,col = "#800000", lty = 3)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.5,col = "#FF0000", lty = 3)
library(rgl)
col1 <- heat.colors(length(bivn.kde$z))[rank(bivn.kde$z)]
persp3d(bivn.kde, col = col1)
#Contornos
bivn.kde <- kde2d(bivn[,1], bivn[,2], n = 150)
filled.contour(x = bivn.kde$x, y = bivn.kde$y , z = bivn.kde$z,plot.axes = { axis(1); axis(2); points(0, 0) })
image(bivn.kde)       # from base graphics package
contour(bivn.kde, add = TRUE)
library(tidyverse)
library(ggplot2)
a <- data.frame( a1=bivn[,1], a2=bivn[,2] )
# Caso 1
# Grafico de contornos
# Solo contorno
ggplot(a, aes(x=a1, y=a2) ) +
geom_density_2d()
# Solo area
ggplot(a, aes(x=a1, y=a2) ) +
stat_density_2d(aes(fill = ..level..), geom = "polygon")
# Area + contorno
ggplot(a, aes(x=a1, y=a2) ) +
stat_density_2d(aes(fill = ..level..), geom = "polygon", colour="white")
## x ~ t_10(0, diag(2))
bivn2 <- rmvt(1000, sigma = diag(2), df = 10)
plot(bivn2)
# Media y matriz de cov
clcenter <- colMeans(bivn2)
clcov <- cov(bivn2)
# 97.5%, 75%, 50% elipses de tolerancia
ellipse(mu = clcenter, sigma = clcov, alpha = 0.025,col = "blue", lty = 2)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.25,col = "green", lty = 3)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.5,col = "red", lty = 3)
library(rgl)
col1 <- heat.colors(length(bivn2.kde$z))[rank(bivn2.kde$z)]
persp3d(bivn2.kde, col = col1)
#Contornos
bivn2.kde <- kde2d(bivn2[,1], bivn2[,2], n = 50)
filled.contour(x = bivn2.kde$x, y = bivn2.kde$y , z = bivn2.kde$z,plot.axes = { axis(1); axis(2); points(0, 0) })
image(bivn2.kde)       # from base graphics package
contour(bivn2.kde, add = TRUE)
b <- data.frame( b1=bivn2[,1], b2=bivn2[,2] )
ggplot(b, aes(x=b1, y=b2) ) +
geom_density_2d()
# Solo area
ggplot(b, aes(x=b1, y=b2) ) +
stat_density_2d(aes(fill = ..level..), geom = "polygon")
# Area + contorno
ggplot(b, aes(x=b1, y=b2) ) +
stat_density_2d(aes(fill = ..level..), geom = "polygon", colour="white")
ggplot(b, aes(x=b1, y=b2) ) +
geom_density_2d()
ggplot(b, aes(x=b1, y=b2) ) +
stat_density_2d(aes(fill = ..level..), geom = "polygon")
ggplot(b, aes(x=b1, y=b2) ) +
stat_density_2d(aes(fill = ..level..), geom = "polygon", colour="white")
geom_point(b,x=b1,y=b2)
b1
b
geom_point(b)
geom_point(b,aes(x=b1, y=b2))
b <- data.frame( b1=bivn2[,1], b2=bivn2[,2] )
geom_point(b,aes(x=b1, y=b2))
b <- data.frame( b1=bivn2[,1], b2=bivn2[,2] )
ggplot(b, aes(x=b1, y=b2) ) +
geom_point(fill="red")
b <- data.frame( b1=bivn2[,1], b2=bivn2[,2] )
ggplot(b, aes(x=b1, y=b2) ) +
geom_point(fill="red",color="blue")
ggplot(b, aes(x=b1, y=b2) ) +
geom_density_2d()
# Solo area
ggplot(b, aes(x=b1, y=b2) ) +
geom_point(fill="red",color="blue")+
geom_density_2d()
ggplot(b, aes(x=b1, y=b2) ) +
geom_point(color="blue")+
geom_density_2d()
library(mixtools)
library(MASS)
library(tidyverse)
library(ggplot2)
library(rgl)
library(mixtools)
library(MASS)
library(tidyverse)
library(ggplot2)
library(rgl)
bivn <- mvrnorm(1000, mu = c(0, 0), Sigma = matrix(c(1, 0, 0, 1), 2))
plot(bivn)
bivn2 <- mvrnorm(800, mu = c(2,3), Sigma = matrix(c(1, 0.7, 0.7, 1), 2))
plot(bivn2)
bivn <- mvrnorm(1000, mu = c(0, 0), Sigma = matrix(c(1, 0, 0, 1), 2))
plot(bivn)
bivn2 <- mvrnorm(800, mu = c(2,3), Sigma = matrix(c(1, 0.7, 0.7, 1), 2))
plot(bivn2)
mix <- rbind(bivn,bivn2)
plot(mix)
mix <- rbind(bivn,bivn2)
plot(mix
mix.kde <- kde2d(mix[,1], mix[,2], n = 50)
mix.kde <- kde2d(mix[,1], mix[,2], n = 50)
col1 <- heat.colors(length(mix.kde$z))[rank(mix.kde$z)]
persp3d(mix.kde, col = col1)
filled.contour(x = mix.kde$x, y = mix.kde$y , z = mix.kde$z,plot.axes = { axis(1); axis(2); points(0, 0) })
image(mix.kde)       # from base graphics package
contour(mix.kde, add = TRUE)
a <- data.frame( a1=mix[,1], a2=mix[,2] )
ggplot(a, aes(x=a1, y=a2) ) +
geom_density_2d()
ggplot(a, aes(x=a1, y=a2) ) +
stat_density_2d(aes(fill = ..level..), geom = "polygon"
)
ggplot(a, aes(x=a1, y=a2) ) +
stat_density_2d(aes(fill = ..level..), geom = "polygon", colour="white")
ggplot(a, aes(x=a1, y=a2) ) +
stat_density_2d(aes(fill = ..level..), geom = "polygon")
bivn <- mvrnorm(1000, mu = c(0, 0), Sigma = matrix(c(1, 0, 0, 1), 2))
plot(bivn)
bivn2 <- mvrnorm(1000, mu = c(5, 5), Sigma = matrix(c(1, 0, 0, 1), 2))
plot(bivn2)
mix <- rbind(bivn,bivn2)
plot(mix)
mix.kde <- kde2d(mix[,1], mix[,2], n = 50)   # MASS package
# Superficie 3-dimensional de la densidad
# RGL interactive plot
col1 <- heat.colors(length(mix.kde$z))[rank(mix.kde$z)]
persp3d(mix.kde, col = col1)
#Contornos
filled.contour(x = mix.kde$x, y = mix.kde$y , z = mix.kde$z,plot.axes = { axis(1); axis(2); points(0, 0) })
image(mix.kde)       # from base graphics package
contour(mix.kde, add = TRUE)     # from base graphics package
a <- data.frame( a1=mix[,1], a2=mix[,2] )
ggplot(a, aes(x=a1, y=a2) ) +
geom_density_2d()
# Solo area
ggplot(a, aes(x=a1, y=a2) ) +
stat_density_2d(aes(fill = ..level..), geom = "polygon")
# Area + contorno
ggplot(a, aes(x=a1, y=a2) ) +
stat_density_2d(aes(fill = ..level..), geom = "polygon", colour="white")
colores <- c("#9370db","#adff2f",'#afeeee','#daa520','#FF00FF','#800080','#00FFFF')
ggplot(df, aes(V8, y = value, color = colores)) +
geom_point(aes(y = V2, col = "V2"),size=2,alpha=0.5) +
geom_point(aes(y = V3, col = "V3"),size=2,alpha=0.5) +
geom_point(aes(y = V4, col = "V4"),size=2,alpha=0.5) +
geom_point(aes(y = V5, col = "V5"),size=2,alpha=0.5) +
geom_point(aes(y = V6, col = "V6"),size=2,alpha=0.5) +
geom_point(aes(y = V7, col = "V7"),size=2,alpha=0.5)
muestra = sample(1:1991,100)
data = data[muestra,muestra+1]
data <- rbind(distancias1,distancias2,distancias3)
distancias1 <- read.csv('./distancias_mex1.csv',header=FALSE)
distancias2 <- read.csv('./distancias_mex2.csv',header=FALSE)
distancias3 <- read.csv('./distancias_mex2.csv',header=FALSE)
setwd("~/R/Practicas-R/Distancias")
data <- rbind(distancias1,distancias2,distancias3)
distancias1 <- read.csv('./distancias_mex1.csv',header=FALSE)
distancias2 <- read.csv('./distancias_mex2.csv',header=FALSE)
distancias3 <- read.csv('./distancias_mex2.csv',header=FALSE)
data <- rbind(distancias1,distancias2,distancias3)
muestra = sample(1:1991,100)
data = data[muestra,muestra+1]
data = data[muestra,muestra+1]
head(data)
data = data[muestra,muestra+1]
muestra = sample(1:1991,100)
data = data[muestra,muestra+1]
data <- rbind(distancias1,distancias2,distancias3)
muestra = sample(1:1991,100)
data = data[muestra,muestra+1]
head(data)
View(data)
View(muestra)
data1 = data[muestra,muestra+1]
muestra = sample(1:1991,100)
data1 = data[muestra,muestra+1]
data <- rbind(distancias1,distancias2,distancias3)
colnames(data)=data[,1]
data <- data[2:1992,]
set.seed(2020)
colnames(data)=data[,1]
data <- data[2:1992,]
muestra = sample(1:1991,100)
data1 = data[muestra,muestra+1]
View(data1)

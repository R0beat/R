ellipse(mu = clcenter, sigma = clcov, alpha = 0.25,col = "#FF1493", lty = 3)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.5,col = "#FF4500", lty = 3)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.025,col = "#FF00FF", lty = 2)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.5,col = "#FF1493", lty = 3)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.8,col = "#FF4500", lty = 3)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.025,col = "#FF00FF", lty = 2)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.5,col = "#FF1493", lty = 3)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.8,col = "#FF4500", lty = 3)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.025,col = "#FF00FF", lty = 2)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.25,col = "#FF1493", lty = 3)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.5,col = "#FF4500", lty = 3)
cor(bivn)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.025,col = "#FF00FF", lty = 2)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.25,col = "#FF1493", lty = 3)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.5,col = "#FF4500", lty = 3)
set.seed(3002)
bivn <- rmvt(1000, sigma = diag(2), df = 3)
plot(bivn)
# Media y matriz de cov calcular matriz de covarianza
clcenter <- colMeans(bivn)
#t student se encuentra en 0
clcov <- cov(bivn)
cor(bvin)
# 97.5%, 75%, 50% elipses de tolerancia
ellipse(mu = clcenter, sigma = clcov, alpha = 0.025,col = "blue", lty = 2)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.25,col = "green", lty = 3)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.5,col = "red", lty = 3)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.025,col = "#FF1493", lty = 2)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.25,col = "#00FF00 ", lty = 3)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.5,col = "#0000CD ", lty = 3)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.025,col = "#FF1493", lty = 2)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.25,col = "#00FF00 ", lty = 3)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.5,col = "#0000CD ", lty = 3)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.025,col = "#FF1493", lty = 2)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.25,col = "#00FF00 ", lty = 3)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.5,col = "#0000CD", lty = 3)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.025,col = "#FF1493", lty = 2)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.25,col = "#800000", lty = 3)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.5,col = "#00FF00", lty = 3)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.025,col = "#FF1493", lty = 2)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.25,col = "#800000", lty = 3)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.5,col = "#4B0082", lty = 3)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.025,col = "#FF1493", lty = 2)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.25,col = "#800000", lty = 3)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.5,col = "#FF00FF", lty = 3)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.025,col = "#FF1493", lty = 2)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.25,col = "#800000", lty = 3)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.5,col = "#FFD700", lty = 3)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.025,col = "#FF1493", lty = 2)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.25,col = "#800000", lty = 3)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.5,col = "#FF0000", lty = 3)
set.seed(3002)
bivn <- rmvt(1000, sigma = diag(2), df = 3,col="green")
plot(bivn)
# Media y matriz de cov calcular matriz de covarianza
clcenter <- colMeans(bivn)
#t student se encuentra en 0
clcov <- cov(bivn)
cor(bvin)
# 97.5%, 75%, 50% elipses de tolerancia
ellipse(mu = clcenter, sigma = clcov, alpha = 0.025,col = "#FF1493", lty = 2)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.25,col = "#800000", lty = 3)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.5,col = "#FF0000", lty = 3)
install.packages(tidyverse)
install.packages(tidyverse
)
install.packages(tidyverse)
install.packages("tidyverse")
library(mixtools)
library(mvtnorm)
#Generando datos bidimensionales t-student con 3 grados de libertad
## x ~ t_3(0, diag(2))
set.seed(3002)
bivn <- rmvt(1000, sigma = diag(2), df = 3,col="green")
plot(bivn)
# Media y matriz de cov calcular matriz de covarianza
clcenter <- colMeans(bivn)
#t student se encuentra en 0
clcov <- cov(bivn)
cor(bvin)
# 97.5%, 75%, 50% elipses de tolerancia
ellipse(mu = clcenter, sigma = clcov, alpha = 0.025,col = "#FF1493", lty = 2)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.25,col = "#800000", lty = 3)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.5,col = "#FF0000", lty = 3)
cor(bivn)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.025,col = "#FF1493", lty = 2)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.25,col = "#800000", lty = 3)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.5,col = "#FF0000", lty = 3)
library(MASS)
bivn.kde <- kde2d(bivn[,1], bivn[,2], n = 50)
library(rgl)
col1 <- heat.colors(length(bivn.kde$z))[rank(bivn.kde$z)]
persp3d(bivn.kde, col = col1)
#Contornos
bivn.kde <- kde2d(bivn[,1], bivn[,2], n = 150)
filled.contour(x = bivn.kde$x, y = bivn.kde$y , z = bivn.kde$z,plot.axes = { axis(1); axis(2); points(0, 0) })
image(bivn.kde)       # from base graphics package
contour(bivn.kde, add = TRUE)
library(tidyverse)
library(ggplot2)
a <- data.frame( a1=bivn[,1], a2=bivn[,2] )
ggplot(a, aes(x=a1, y=a2) ) +
geom_density_2d()
# Solo area
ggplot(a, aes(x=a1, y=a2) ) +
stat_density_2d(aes(fill = ..level..), geom = "polygon")
# Area + contorno
ggplot(a, aes(x=a1, y=a2) ) +
stat_density_2d(aes(fill = ..level..), geom = "polygon", colour="white")
ggplot(a, aes(x=a1, y=a2) ) +
geom_density_2d()
ggplot(a, aes(x=a1, y=a2) ) +
geom_density_2d()
ggplot(a, aes(x=a1, y=a2) ) +
stat_density_2d(aes(fill = ..level..), geom = "polygon")
ggplot(a, aes(x=a1, y=a2) ) +
stat_density_2d(aes(fill = ..level..), geom = "polygon", colour="white")
library(mixtools)
library(mvtnorm)
set.seed(3002)
bivn <- rmvt(1000, sigma = diag(2), df = 3,col="green")
set.seed(3002)
bivn <- rmvt(1000, sigma = diag(2), df = 3,col="green")
library(mixtools)
library(mvtnorm)
set.seed(3002)
bivn <- rmvt(1000, sigma = diag(2), df = 3,col="green"
clcenter <- colMeans(bivn)
#t student se encuentra en 0
clcov <- cov(bivn)
cor(bivn)
library(tidyverse)
library(ggplot2)
a <- data.frame( a1=bivn[,1], a2=bivn[,2] )
# Caso 1
# Grafico de contornos
# Solo contorno
ggplot(a, aes(x=a1, y=a2) ) +
geom_density_2d()
# Solo area
ggplot(a, aes(x=a1, y=a2) ) +
stat_density_2d(aes(fill = ..level..), geom = "polygon")
# Area + contorno
ggplot(a, aes(x=a1, y=a2) ) +
stat_density_2d(aes(fill = ..level..), geom = "polygon", colour="white")
############################################################################################################
#Generando datos bidimensionales t-student con 10 grados de libertad
## x ~ t_10(0, diag(2))
bivn2 <- rmvt(1000, sigma = diag(2), df = 10)
plot(bivn2)
# Media y matriz de cov
clcenter <- colMeans(bivn2)
clcov <- cov(bivn2)
# 97.5%, 75%, 50% elipses de tolerancia
ellipse(mu = clcenter, sigma = clcov, alpha = 0.025,col = "blue", lty = 2)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.25,col = "green", lty = 3)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.5,col = "red", lty = 3)
ggplot(a, aes(x=a1, y=a2) ) +
geom_density_2d()
# Solo area
ggplot(a, aes(x=a1, y=a2) ) +
stat_density_2d(aes(fill = ..level..), geom = "polygon")
# Area + contorno
ggplot(a, aes(x=a1, y=a2) ) +
stat_density_2d(aes(fill = ..level..), geom = "polygon", colour="white")
bivn2 <- rmvt(1000, sigma = diag(2), df = 10)
plot(bivn2)
# Media y matriz de cov
clcenter <- colMeans(bivn2)
clcov <- cov(bivn2)
# 97.5%, 75%, 50% elipses de tolerancia
ellipse(mu = clcenter, sigma = clcov, alpha = 0.025,col = "blue", lty = 2)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.25,col = "green", lty = 3)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.5,col = "red", lty = 3)
set.seed(3002)
bivn <- rmvt(1000, sigma = diag(2), df = 3,col="green")
plot(bivn)
# Media y matriz de cov calcular matriz de covarianza
clcenter <- colMeans(bivn)
#t student se encuentra en 0
clcov <- cov(bivn)
cor(bivn)
# 97.5%, 75%, 50% elipses de tolerancia
ellipse(mu = clcenter, sigma = clcov, alpha = 0.025,col = "#FF1493", lty = 2)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.25,col = "#800000", lty = 3)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.5,col = "#FF0000", lty = 3)
set.seed(3002)
bivn <- rmvt(1000, sigma = diag(2), df = 3,col="green")
plot(bivn)
# Media y matriz de cov calcular matriz de covarianza
clcenter <- colMeans(bivn)
#t student se encuentra en 0
clcov <- cov(bivn)
cor(bivn)
# 97.5%, 75%, 50% elipses de tolerancia
ellipse(mu = clcenter, sigma = clcov, alpha = 0.025,col = "#FF1493", lty = 2)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.25,col = "#800000", lty = 3)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.5,col = "#FF0000", lty = 3)
bivn2 <- rmvt(1000, sigma = diag(2), df = 10)
plot(bivn2)
# Media y matriz de cov
clcenter <- colMeans(bivn2)
clcov <- cov(bivn2)
# 97.5%, 75%, 50% elipses de tolerancia
ellipse(mu = clcenter, sigma = clcov, alpha = 0.025,col = "blue", lty = 2)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.25,col = "green", lty = 3)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.5,col = "red", lty = 3)
set.seed(3002)
bivn <- rmvt(1000, sigma = diag(2), df = 3,col="green")
clcenter <- colMeans(bivn)
#t student se encuentra en 0
clcov <- cov(bivn)
cor(bivn)
# 97.5%, 75%, 50% elipses de tolerancia
ellipse(mu = clcenter, sigma = clcov, alpha = 0.025,col = "#FF1493", lty = 2)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.25,col = "#800000", lty = 3)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.5,col = "#FF0000", lty = 3)
library(rgl)
col1 <- heat.colors(length(bivn.kde$z))[rank(bivn.kde$z)]
persp3d(bivn.kde, col = col1)
#Contornos
bivn.kde <- kde2d(bivn[,1], bivn[,2], n = 150)
filled.contour(x = bivn.kde$x, y = bivn.kde$y , z = bivn.kde$z,plot.axes = { axis(1); axis(2); points(0, 0) })
image(bivn.kde)       # from base graphics package
contour(bivn.kde, add = TRUE)
library(tidyverse)
library(ggplot2)
a <- data.frame( a1=bivn[,1], a2=bivn[,2] )
# Caso 1
# Grafico de contornos
# Solo contorno
ggplot(a, aes(x=a1, y=a2) ) +
geom_density_2d()
# Solo area
ggplot(a, aes(x=a1, y=a2) ) +
stat_density_2d(aes(fill = ..level..), geom = "polygon")
# Area + contorno
ggplot(a, aes(x=a1, y=a2) ) +
stat_density_2d(aes(fill = ..level..), geom = "polygon", colour="white")
## x ~ t_10(0, diag(2))
bivn2 <- rmvt(1000, sigma = diag(2), df = 10)
plot(bivn2)
# Media y matriz de cov
clcenter <- colMeans(bivn2)
clcov <- cov(bivn2)
# 97.5%, 75%, 50% elipses de tolerancia
ellipse(mu = clcenter, sigma = clcov, alpha = 0.025,col = "blue", lty = 2)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.25,col = "green", lty = 3)
ellipse(mu = clcenter, sigma = clcov, alpha = 0.5,col = "red", lty = 3)
library(rgl)
col1 <- heat.colors(length(bivn2.kde$z))[rank(bivn2.kde$z)]
persp3d(bivn2.kde, col = col1)
#Contornos
bivn2.kde <- kde2d(bivn2[,1], bivn2[,2], n = 50)
filled.contour(x = bivn2.kde$x, y = bivn2.kde$y , z = bivn2.kde$z,plot.axes = { axis(1); axis(2); points(0, 0) })
image(bivn2.kde)       # from base graphics package
contour(bivn2.kde, add = TRUE)
b <- data.frame( b1=bivn2[,1], b2=bivn2[,2] )
ggplot(b, aes(x=b1, y=b2) ) +
geom_density_2d()
# Solo area
ggplot(b, aes(x=b1, y=b2) ) +
stat_density_2d(aes(fill = ..level..), geom = "polygon")
# Area + contorno
ggplot(b, aes(x=b1, y=b2) ) +
stat_density_2d(aes(fill = ..level..), geom = "polygon", colour="white")
ggplot(b, aes(x=b1, y=b2) ) +
geom_density_2d()
ggplot(b, aes(x=b1, y=b2) ) +
stat_density_2d(aes(fill = ..level..), geom = "polygon")
ggplot(b, aes(x=b1, y=b2) ) +
stat_density_2d(aes(fill = ..level..), geom = "polygon", colour="white")
geom_point(b,x=b1,y=b2)
b1
b
geom_point(b)
geom_point(b,aes(x=b1, y=b2))
b <- data.frame( b1=bivn2[,1], b2=bivn2[,2] )
geom_point(b,aes(x=b1, y=b2))
b <- data.frame( b1=bivn2[,1], b2=bivn2[,2] )
ggplot(b, aes(x=b1, y=b2) ) +
geom_point(fill="red")
b <- data.frame( b1=bivn2[,1], b2=bivn2[,2] )
ggplot(b, aes(x=b1, y=b2) ) +
geom_point(fill="red",color="blue")
ggplot(b, aes(x=b1, y=b2) ) +
geom_density_2d()
# Solo area
ggplot(b, aes(x=b1, y=b2) ) +
geom_point(fill="red",color="blue")+
geom_density_2d()
ggplot(b, aes(x=b1, y=b2) ) +
geom_point(color="blue")+
geom_density_2d()
library(mixtools)
library(MASS)
library(tidyverse)
library(ggplot2)
library(rgl)
library(mixtools)
library(MASS)
library(tidyverse)
library(ggplot2)
library(rgl)
bivn <- mvrnorm(1000, mu = c(0, 0), Sigma = matrix(c(1, 0, 0, 1), 2))
plot(bivn)
bivn2 <- mvrnorm(800, mu = c(2,3), Sigma = matrix(c(1, 0.7, 0.7, 1), 2))
plot(bivn2)
bivn <- mvrnorm(1000, mu = c(0, 0), Sigma = matrix(c(1, 0, 0, 1), 2))
plot(bivn)
bivn2 <- mvrnorm(800, mu = c(2,3), Sigma = matrix(c(1, 0.7, 0.7, 1), 2))
plot(bivn2)
mix <- rbind(bivn,bivn2)
plot(mix)
mix <- rbind(bivn,bivn2)
plot(mix
mix.kde <- kde2d(mix[,1], mix[,2], n = 50)
mix.kde <- kde2d(mix[,1], mix[,2], n = 50)
col1 <- heat.colors(length(mix.kde$z))[rank(mix.kde$z)]
persp3d(mix.kde, col = col1)
filled.contour(x = mix.kde$x, y = mix.kde$y , z = mix.kde$z,plot.axes = { axis(1); axis(2); points(0, 0) })
image(mix.kde)       # from base graphics package
contour(mix.kde, add = TRUE)
a <- data.frame( a1=mix[,1], a2=mix[,2] )
ggplot(a, aes(x=a1, y=a2) ) +
geom_density_2d()
ggplot(a, aes(x=a1, y=a2) ) +
stat_density_2d(aes(fill = ..level..), geom = "polygon"
)
ggplot(a, aes(x=a1, y=a2) ) +
stat_density_2d(aes(fill = ..level..), geom = "polygon", colour="white")
ggplot(a, aes(x=a1, y=a2) ) +
stat_density_2d(aes(fill = ..level..), geom = "polygon")
bivn <- mvrnorm(1000, mu = c(0, 0), Sigma = matrix(c(1, 0, 0, 1), 2))
plot(bivn)
bivn2 <- mvrnorm(1000, mu = c(5, 5), Sigma = matrix(c(1, 0, 0, 1), 2))
plot(bivn2)
mix <- rbind(bivn,bivn2)
plot(mix)
mix.kde <- kde2d(mix[,1], mix[,2], n = 50)   # MASS package
# Superficie 3-dimensional de la densidad
# RGL interactive plot
col1 <- heat.colors(length(mix.kde$z))[rank(mix.kde$z)]
persp3d(mix.kde, col = col1)
#Contornos
filled.contour(x = mix.kde$x, y = mix.kde$y , z = mix.kde$z,plot.axes = { axis(1); axis(2); points(0, 0) })
image(mix.kde)       # from base graphics package
contour(mix.kde, add = TRUE)     # from base graphics package
a <- data.frame( a1=mix[,1], a2=mix[,2] )
ggplot(a, aes(x=a1, y=a2) ) +
geom_density_2d()
# Solo area
ggplot(a, aes(x=a1, y=a2) ) +
stat_density_2d(aes(fill = ..level..), geom = "polygon")
# Area + contorno
ggplot(a, aes(x=a1, y=a2) ) +
stat_density_2d(aes(fill = ..level..), geom = "polygon", colour="white")
colores <- c("#9370db","#adff2f",'#afeeee','#daa520','#FF00FF','#800080','#00FFFF')
ggplot(df, aes(V8, y = value, color = colores)) +
geom_point(aes(y = V2, col = "V2"),size=2,alpha=0.5) +
geom_point(aes(y = V3, col = "V3"),size=2,alpha=0.5) +
geom_point(aes(y = V4, col = "V4"),size=2,alpha=0.5) +
geom_point(aes(y = V5, col = "V5"),size=2,alpha=0.5) +
geom_point(aes(y = V6, col = "V6"),size=2,alpha=0.5) +
geom_point(aes(y = V7, col = "V7"),size=2,alpha=0.5)
10 -> m
m
rnorm(1)
n <- 3 + rnorm(1)
n
n <- 3 + rnorm(1)
(10 +3) * 5
(10 + 2) * 5
ls()
10 = m
10 -> m
name <- 'Roberto'; n1<-8; n2<-10; m<-0.5;
ls(pat = 'm')
name <- 'Roberto'; n1<-8; n2<-10; m<-0.5;
ls(pat = 'n1')
name <- 'Roberto'; n1<-8; n2<-10; m<-0.5;
ls(pat = 'm')
ls(pat = '^m')
ls.str()
rm(list=ls())
install.packages("cluster")
library(cluster)
set.seed(2020)
data <- iris[sample(1:150,150),]
set.seed(2020)
data <- iris[sample(1:150,150),]
Data <- iris[,1:4]
n <- dim(Data)[1]
n
wcss <- vector()
for(k in 1:20){
wcss[k] <- sum(kmeans(Data,k,nstart=25)$withinss)
}
plot(x=1:20,y=wcss,pch=19,col="blue",type="o")
K=3
Kmeans <- kmeans(Data,centers=K,nstart=25)
K=3
Kmeans <- kmeans(Data,centers=K,nstart=25)
SCDG <- Kmeans$withinss
SCDG # SCDG de cada grupo
Kmeans$tot.withinss #SCDG total
100 * Kmeans$betweenss / Kmeans$totss #porcentaje bien clasificado
grupos.Kmeans <- Kmeans$cluster
grupos.Kmeans
col.Kmeans <- c("blue","red","green")[grupos.Kmeans]
pairs(Data,col=col.Kmeans,main="K-medias",pch=19)
clusplot(Data, Kmeans$cluster, color=T, shade=T, labels=0, lines=0)
dist.euclidea <- dist(Data,method="euclidean")
silueta.Kmeans <- silhouette(grupos.Kmeans,dist.euclidea)
plot(silueta.Kmeans,main="Silueta",col="blue")
setwd("~/R/Practicas-R/Tarea-2")
library(MASS)
library(stats)
library(tidyverse)
library(RColorBrewer)
companias <- read.csv('./companies79.csv')
companias <- companias[,2:9]
pairs(companias[,1:6],pch=19, col= brewer.pal (n = 9, name="Reds")[companias[,7]])H
pairs(companias[,1:6],pch=19, col= brewer.pal (n = 9, name="Reds")[companias[,7]])
pairs(CompaniesNum,pch=19,col=brewer.pal(n=8, name="Spectral")[companies79[,8]])
companias79 <- read.csv('./companies79.csv')
CompaniesNum <- companies79[,3:8]
companias79 <- read.csv('./companies79.csv')
CompaniesNum <- companies79[,3:8]
CompaniesNum <- companias79[,3:8]
pairs(CompaniesNum,pch=19,col=brewer.pal(n=8, name="Spectral")[companias79[,8]])
#Dibuja un scatterplot múltiple de las 6 variables numéricas
df <- data.frame(companias)
plot(silueta.Kmeans,main="Silueta",col="blue")
View(companias79)
ggplot(data = iris) +
geom_point(mapping = aes(x=companias79$V8,y=companias79[,3:8] = Species),size=5,alpha=0.5)+theme_bw()
ggplot(data = iris) +
geom_point(mapping = aes(x=companias79$V8,y=companias79[,3:8] = Species),size=5,alpha=0.5)+theme_bw()
ggplot(data = iris) +
geom_point(mapping = aes(x=companias79$V8,y=companias79[,3:8]),size=5,alpha=0.5)+theme_bw()
pairs(CompaniesNum,pch=19,col=brewer.pal(n=8, name="Spectral")[companias79[,8]])
companias <- read.csv('./companies79.csv')
companias <- companias7[,3:9]
companias <- read.csv('./companies79.csv')
companias <- companias[,3:9]
companias <- read.csv('./companies79.csv')
companias <- companias[,3:9]
View(companias)
pairs(~V1+V2+V3+V4+V5+V6+V7,data=companias,
main="Simple Scatterplot Matrix")
pairs(~V2+V3+V4+V5+V6+V7,data=companias,
main="Simple Scatterplot Matrix")
pairs(~companias(c[,3:7]),data=companias,
main="Simple Scatterplot Matrix")
pairs(~companias[,3:7],data=companias,
main="Simple Scatterplot Matrix")
pairs(~V2+V3+V4+V5+V6+V7,data=companias,
main="Simple Scatterplot Matrix")
companias <- read.csv('./companies79.csv')
companias <- companias[,3:9]
pairs(~V2+V3+V4+V5+V6+V7,data=companias,
main="Simple Scatterplot Matrix")
pairs(~V2+V3+V4+V5+V6+V7,data=companias,col=brewer.pal(n=8, name="Spectral",
main="Simple Scatterplot Matrix")
pairs(~V2+V3+V4+V5+V6+V7,data=companias,
main="Simple Scatterplot Matrix")
companias <- companias[,3:9]
pairs(~V2+V3+V4+V5+V6+V7,data=companias,
main="Simple Scatterplot Matrix")
companias <- read.csv('./companies79.csv')
companias <- companias[,2:9]
companias <- read.csv('./companies79.csv')
companias <- companias[,2:9]
View(companias)
pairs(companias[,3:7],pch=19,col=brewer.pal(n=8, name="Spectral")[companias[,8]])
View(companias[,3:7])
pairs(companias[,3:8],pch=19,col=brewer.pal(n=8, name="Spectral")[companias[,8]])
pairs(companias[,3:7],pch=19,col=brewer.pal(n=8, name="Spectral")[companias[,9]])
pairs(companias[,3:7],pch=19,col=brewer.pal(n=8, name="Spectral")[companias[,8]])
companias <- companias[,2:8]
pairs(companias[,3:7],pch=19,col=brewer.pal(n=8, name="Spectral")[companias[,8]])
companias79 <- read.csv('./companies79.csv')
companias<- companias79[,3:8]
pairs(companias,pch=19,col=brewer.pal(n=8, name="Spectral")[companias79[,8]])
companias <- read.csv('./companies79.csv')
companies<- companias79[,3:8]
#Dibuja un scatterplot múltiple de las 6 variables numéricas
pairs(companies,pch=19,col=brewer.pal(n=8, name="Spectral")[companias[,8]])
library(MASS)
library(stats)
library(tidyverse)
library(RColorBrewer)
companias <- read.csv('./companies79.csv')
companies<- companias79[,3:8]
#Dibuja un scatterplot múltiple de las 6 variables numéricas
pairs(companies,pch=19,col=brewer.pal(n=8, name="Spectral")[companias[,8]])
companias <- read.csv('./companies79.csv')
companies<- companias79[,3:8]
setwd("~/R/Practicas-R/Tarea-2")
companias <- read.csv('./companies79.csv')
companies<- companias79[,3:8]
companies<- companias[,3:8]
pairs(companies,pch=19,col=brewer.pal(n=8, name="Spectral")[companias[,8]])
Xlog <- log(companies)
pairs(Xlog,pch=19,col=brewer.pal(n=8, name="Spectral")[companias[,8]])
pairs(Xlog,pch=10,col=brewer.pal(n=7, name="Spectral")[companias[,8]])
pairs(companies,col=brewer.pal(name="Spectral")[companias[,8]])
pairs(companies,col=brewer.pal(n=8, name="Spectral")[companias[,8]])
pairs(companies,pch=20,col=brewer.pal(n=8, name="Spectral")[companias[,8]])
pairs(companies,pch=15,col=brewer.pal(n=8, name="Spectral")[companias[,8]])
pairs(companies,pch=19,col=brewer.pal(n=8, name="Spectral")[companias[,8]])
